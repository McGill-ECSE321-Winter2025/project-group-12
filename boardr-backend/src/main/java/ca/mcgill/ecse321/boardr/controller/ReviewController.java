package ca.mcgill.ecse321.boardr.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.*;

import ca.mcgill.ecse321.boardr.dto.Review.ReviewCreationDTO;
import ca.mcgill.ecse321.boardr.dto.Review.ReviewResponseDTO;
import ca.mcgill.ecse321.boardr.model.Review;
import ca.mcgill.ecse321.boardr.service.ReviewService;

import java.util.List;
import java.util.stream.Collectors;

@RestController
public class ReviewController {
    @Autowired
    private ReviewService reviewService;

     /**
     * Create a new review.
     *
     * @param reviewToCreate The review to create
     * @return The created review, including its autogenerated ID
     */
    @PostMapping("/reviews")
    @ResponseStatus(HttpStatus.CREATED)
    public ReviewResponseDTO createReview(@RequestBody ReviewCreationDTO reviewToCreate) {
        Review createdReview = reviewService.createReview(reviewToCreate);
        return new ReviewResponseDTO(createdReview);
    }

    /**
     * Find a specific review by ID.
     *
     * @param reviewId The primary key of the review to find
     * @return The review with that ID
     */
    @GetMapping("/reviews/{reviewId}")
    public ReviewResponseDTO getReviewById(@PathVariable int reviewId) {
        Review review = reviewService.getReviewById(reviewId);
        return new ReviewResponseDTO(review);
    }

    /**
     * Get all reviews.
     *
     * @return A list of all reviews
     */
    @GetMapping("/reviews")
    public List<ReviewResponseDTO> getAllReviews() {
        return reviewService.getAllReviews().stream()
                .map(ReviewResponseDTO::new)
                .collect(Collectors.toList());
    }

    /**
     * Delete a review by ID.
     *
     * @param reviewId The primary key of the review to delete
     */
    @DeleteMapping("/reviews/{reviewId}")
    @ResponseStatus(HttpStatus.NO_CONTENT)
    public void deleteReview(@PathVariable int reviewId) {
        reviewService.deleteReview(reviewId);
    }
}
